name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push
        env:
          REGISTRY: ${{ secrets.ECR_REGISTRY }}
          REPOSITORY: fastapi-app
          IMAGE_TAG: latest
        run: |
          echo "Building image..."
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          echo "Pushing image..."
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Deploy to EC2
        run: |
          echo "Setting up SSH..."
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" | base64 -d > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          
          echo "Starting deployment..."
          ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "
            echo 'Logging into ECR...' &&
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }} &&
            echo 'Pulling new image...' &&
            docker pull ${{ secrets.ECR_REGISTRY }}/fastapi-app:latest &&
            echo 'Stopping old container...' &&
            docker stop fastapi-app || true &&
            docker rm fastapi-app || true &&
            echo 'Starting new container...' &&
            docker run -d --name fastapi-app -p 8000:8000 ${{ secrets.ECR_REGISTRY }}/fastapi-app:latest &&
            echo 'Deployment complete!'
          "